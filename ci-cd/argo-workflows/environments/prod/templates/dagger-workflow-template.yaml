apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: dagger-workflow
  namespace: dagger-workflows
spec:
  entrypoint: dagger-workflow
  arguments:
    parameters:
      - name: dagger-version
      - name: git-repo
      - name: git-revision
      - name: sub-directory
      - name: dagger-call-command
  volumes:
    - name: dagger-socket
      emptyDir: {}
    - name: dagger-storage
      emptyDir: {}
  templates:
    - name: dagger-workflow
      sidecars:
        - name: dagger-engine
          image: registry.dagger.io/engine:v{{workflow.parameters.dagger-version}}
          securityContext:
            privileged: true
            capabilities:
              add:
                - ALL
          readinessProbe:
            exec:
              command:
                - dagger
                - core
                - version
          volumeMounts:
            - mountPath: /run/dagger
              name: dagger-socket
            - mountPath: /var/lib/dagger
              name: dagger-storage
      inputs:
        artifacts:
          - name: project-source
            path: /work
            git:
              repo: '{{workflow.parameters.git-repo}}'
              revision: '{{workflow.parameters.git-revision}}'
          - name: dagger-cli
            path: /usr/local/bin
            mode: 0755
            http:
              url: https://github.com/dagger/dagger/releases/download/v{{workflow.parameters.dagger-version}}/dagger_v{{workflow.parameters.dagger-version}}_linux_amd64.tar.gz
      container:
        image: alpine:latest
        command:
          - sh
          - -c
          - dagger call {{workflow.parameters.dagger-call-command}}
        workingDir: /work/{{workflow.parameters.sub-directory}}
        env:
          - name: _EXPERIMENTAL_DAGGER_RUNNER_HOST
            value: unix:///run/dagger/engine.sock
        volumeMounts:
          - mountPath: /run/dagger
            name: dagger-socket
